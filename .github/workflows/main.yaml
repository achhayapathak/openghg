name: OpenGHG tests

on:
  push:
    branches: [master, devel]
    tags:
    - '*'
  pull_request:
    branches: [master, devel]

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.1
      with:
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Do some macOS specific installs
      run: |
        brew install c-blosc hdf5
      if: matrix.python-version == 3.9 && matrix.operating-system == 'macos-latest'
    - name: Install openghg
      run: |
        python -m pip install --upgrade pip==20.2.4 wheel
        pip install -r requirements-dev.txt
        pip install .
    - name: 'Clone Acquire for services folder required for tests'
      run: |
        git clone -b testStore https://github.com/gareth-j/acquire.git ../acquire
        pip install -r ../acquire/requirements.txt
        pip install oci retry
    - name: Lint with flake8
      run: |
        flake8 openghg/ --count --statistics
    - name: Create mock cdsapi config file
      run: |
        echo $'url: https://www.openghg.org\nkey: 00000:f5690ad7-test-test-test-6fb0573991ca\n' > ~/.cdsapirc
    - name: Test with pytest
      env:
        OPENGHG_PATH: /tmp/openghg_store
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      run: |
        bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    - name: Install pandoc and build the documentation
      run: |
        sudo apt-get install -yq pandoc
        cd doc
        make
      if: matrix.python-version == 3.7 && matrix.operating-system == 'ubuntu-latest'
    - name: Deploy to GitHub pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages 
        FOLDER: "doc/build/html"
        CLEAN: true 
      if: matrix.python-version == 3.7 && matrix.operating-system == 'ubuntu-latest'
      
        


    